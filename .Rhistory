a_size = 3
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
x1 = min(Jlist) + 0.1*(max(Jlist)-min(Jlist))
y1 = 0.8 + 0.1*(max(df$portion)-min(df$portion))
x2 = J_hat + 0.05*(max(Jlist)-min(Jlist))
y2 = 0.8 - 0.3*(max(df$portion)-min(df$portion))
a_size = 10
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
x1 = min(Jlist) + 0.1*(max(Jlist)-min(Jlist))
y1 = 0.8 + 0.1*(max(df$portion)-min(df$portion))
x2 = J_hat - 0.1*(max(Jlist)-min(Jlist))
y2 = 0.8 - 0.3*(max(df$portion)-min(df$portion))
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
x1 = min(Jlist) + 0.1*(max(Jlist)-min(Jlist))
y1 = 0.8 + 0.1*(max(df$portion)-min(df$portion))
x2 = J_hat - 0.1*(max(Jlist)-min(Jlist))
y2 = 0.3*(max(df$portion)-min(df$portion))
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
x1 = min(Jlist) + 0.1*(max(Jlist)-min(Jlist))
y1 = 0.8 + 0.1*(max(df$portion)-min(df$portion))
x2 = J_hat - 0.1*(max(Jlist)-min(Jlist))
y2 = min(df$portion) + 0.3*(max(df$portion)-min(df$portion))
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
xlower = min(Jlist)
yupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.1*(yupper-ylower)
x2 = J_hat - 0.1*(xupper - xlower)
y2 = ylower + 0.3*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.1*(yupper-ylower)
x2 = J_hat - 0.1*(xupper - xlower)
y2 = ylower + 0.3*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '(1).png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.05*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim(S0, Jlist0, sim0, J_hat)
plotsim(S1, Jlist1, sim1, J_hat)
plotsim(S2, Jlist2, sim2, J_hat)
plotsim(S0, Jlist0, sim0, J_hat)
plotsim(S1, Jlist1, sim1, J_hat)
plotsim(S2, Jlist2, sim2, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.05*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('$\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim(S1, Jlist1, sim1, J_hat)
plotsim(S2, Jlist2, sim2, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.05*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('analytical $\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.1*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('analytical $\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(S0, Jlist0, sim0, J_hat)
plotsim(S1, Jlist1, sim1, J_hat)
plotsim(S2, Jlist2, sim2, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.12*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('analytical $\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
t
plotsim(S1, Jlist1, sim1, J_hat)
plotsim(S2, Jlist2, sim2, J_hat)
S3 = 10000
Jlist3 = seq(from=2700, to=2800, by=10)
plotsim(S0, Jlist0, sim0, J_hat)
# Define a function to run simulations
simulate <- function(data1, Jlist, Simulations, take_up=1) {
# data1 = dataframe of representative observations to sample from
# Jlist = list of sample sizes J (number of households)
# Simulations = Number of simulations to run for each J
# take_up = fraction of households assigned treatment that take up treatment
# Start a dataframe to keep track of simulation outputs
df = data.frame()
print(paste('START:', Simulations, "simulations for sample sizes", min(Jlist), 'to', max(Jlist)))
time_start = Sys.time()
# Itererate over a list of sample sizes
for (J in Jlist) {
print(paste(format(Sys.time(), "%X"), ': Starting', Simulations, 'simulations for # households =', J))
df1 = data.frame()
# Run `Simulations` simulations
for (s in 1:Simulations){
# Generate sample of J households with replacement
sample_hhs = sample(data1$custid, J, replace=TRUE)
sample = bind_rows(lapply(sample_hhs, function(i) data1[data1$custid %in% c(i), ]))
# create new HH ids in case a HH is repeated
sample$id = rep(1:J, each=24)
# Randomly treat P proportion of the observations
Jtreat = round(P*J*take_up)
idx = sample(1:J, Jtreat, replace=FALSE)
sample$kwh_new = sample$kwh
sample[sample$id %in% idx,]$kwh_new = sample[sample$id %in% idx,]$kwh*(1 - 0.05)
sample$D = 0
sample[sample$id %in% idx,]$D  = 1
# Regress
reg = summary(lm(kwh_new ~ D + factor(yearmonthid), data=sample))
# Save p-value of average treatment effect estimate
coef = coef(reg)['D', 'Estimate']
pval = coef(reg)['D', 'Pr(>|t|)']
df2 = data.frame(J=J, coef=coef, pval=pval, reject=(coef < 0 && pval <= 0.05))
df1 = rbind(df1, df2)
}
# Save portion of rejected nulls (p < alpha)
m = mean(df1$reject)
se = (m*(1-m)/Simulations)^0.5
lower = m - 1.96*se
upper = m + 1.96*se
print(paste('Portion of simulations that lead to rejecting the null:', m,
'[', lower,', ', upper, ']'))
df = rbind(df, data.frame(J=J, portion=m, lower=lower, upper=upper, simulations=Simulations))
}
print(paste('DONE: Simulation duration:', round((Sys.time() - time_start)/60, 2), 'min'))
return(df)
}
plotsim <- function(Simulations, Jlist, df, J_hat) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.12*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('analytical $\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
Jlist4 = seq(from=1000, to=7000, by=500)
sim4 = simulate(data1, Jlist2, Simulations=100, take_up=0.10)
plotsim(1000, Jlist2, sim4, J_hat)
Jlist4 = seq(from=1000, to=7000, by=500)
sim4 = simulate(data1, Jlist2, Simulations=100, take_up=0.10)
plotsim(100, Jlist2, sim4, J_hat)
Jlist4 = seq(from=1000, to=7000, by=500)
sim4 = simulate(data1, Jlist4, Simulations=100, take_up=0.10)
plotsim(100, Jlist4, sim4, J_hat)
Jlist4 = seq(from=1000, to=20000, by=500)
sim4 = simulate(data1, Jlist4, Simulations=10, take_up=0.10)
Jlist4 = seq(from=1000, to=20000, by=500)
sim4 = simulate(data1, Jlist4, Simulations=20, take_up=0.10)
plotsim(20, Jlist4, sim4, J_hat)
plotsim <- function(Simulations, Jlist, df, J_hat, take_up=1) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '_takeup-', take_up, '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.12*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('analytical $\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim <- function(Simulations, Jlist, df, J_hat, take_up=1) {
png(file=paste0('1-2_simulations_',Simulations, '_', min(Jlist), '-to-', max(Jlist), '_takeup-', take_up, '.png'),
width=800, height=400)
xlower = min(Jlist)
xupper = max(Jlist)
ylower = min(df$lower)
yupper = max(df$upper)
x1 = xlower + 0.1*(xupper - xlower)
y1 = 0.8 + 0.05*(yupper-ylower)
x2 = J_hat - 0.12*(xupper - xlower)
y2 = ylower + 0.1*(yupper-ylower)
a_size = 6
print(ggplot(df, aes(x=J, y=portion)) +
labs(title=paste('Proportion of', Simulations, 'simulations rejecting the null when sampling from J households'),
subtitle="Shaded area = rough 95% confidence interval of portions") +
geom_line() +
xlab('J (number of households in sample') +
ylab(paste('Proportion rejecting the null')) +
xlim(range(min(Jlist), max(Jlist))) +
geom_hline(yintercept=0.8, linetype="dashed", color = "red") +
annotate("text", x=x1, y=y1, label=TeX("$\\kappa = 0.8$"), size=a_size) +
geom_vline(xintercept=J_hat, linetype="dashed", color = "red") +
annotate("text", x=x2, y=y2, label=TeX(sprintf('analytical $\\hat{J} = %d$', round(J_hat))), size=a_size) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype="dashed", color="green"))
dev.off()
}
plotsim(20, Jlist4, sim4, J_hat/0.1^2, take_up=0.1)
Jlist5 = seq(from=7000, to=50000, by=500)
sim5 = simulate(data1, Jlist5, Simulations=100, take_up=0.10)
plotsim(100, Jlist5, sim5, J_hat/0.1^2, take_up=0.1)
sim5 = data.frame(col.names=c('J','portion','lower','upper'))
View(sim5)
View(sim5)
sim5 = data.frame(J=c(), portion=c(), lower=c(), upper=c())
View(sim5)
sim5 = data.frame(J=c(7000), portion=c(0.75), lower=c(0.665129510429125), upper=c(0.834870489570875))
View(sim5)
sim5 = data.frame(J=Jlist5, portion=c(0.75), lower=c(0.665129510429125), upper=c(0.834870489570875))
View(sim5)
install.packages("editData")
portion_list = c(0.75, 0.77, 0.84, 0.79, 0.83, 0.86, 0.82, 0.91, 0.82, 0.86, 0.85, 0.87, 0.87, 0.91, 0.89, 0.87, 0.87, 0.87, 0.87, 0.9, 0.93, 0.92, 0.96, 0.97, 0.94, 0.97, 0.94, 0.96, 0.96, 0.96, 0.97, 0.97, 0.96, 0.95, 0.97, 0.94, 0.94, 0.97, 0.99, 0.96, 0.96, 0.98, 0.97, 0.99, 0.98, 0.99, 0.97, 0.97, 0.97, 1, 0.97, 0.99, 0.98, 1, 0.99, 1, 0.99, 0.99, 0.99, 1, 0.99, 1, 1, 0.99, 0.99, 0.98, 1, )
lower_list = c(0.665129510429125, 0.687516828382997, 0.768145213103092, 0.710167585530688, 0.756375971313708, 0.791990541834242, 0.74469925896779, 0.853908374956684, 0.74469925896779, 0.791990541834242, 0.78001400140028, 0.804084526854463, 0.804084526854463, 0.853908374956684, 0.828673607639125, 0.804084526854463, 0.804084526854463, 0.804084526854463, 0.804084526854463, 0.8412, 0.879991184777082, 0.866826532932298, 0.92159200083316, 0.936564904665905, 0.893452579018811, 0.936564904665905, 0.893452579018811, 0.92159200083316, 0.92159200083316, 0.92159200083316, 0.936564904665905, 0.936564904665905, 0.92159200083316, 0.907282790353301, 0.936564904665905, 0.893452579018811, 0.893452579018811, 0.936564904665905, 0.97049824623271, 0.92159200083316, 0.92159200083316, 0.95256, 0.936564904665905, 0.97049824623271, 0.95256, 0.97049824623271, 0.936564904665905, 0.936564904665905, 0.936564904665905, 1, 0.936564904665905, 0.97049824623271, 0.95256, 1, 0.97049824623271, 1, 0.97049824623271, 0.97049824623271, 0.97049824623271, 1, 0.97049824623271, 1, 1, 0.97049824623271, 0.97049824623271, 0.95256, 1, )
upper_list = c(0.834870489570875, 0.852483171617003, 0.911854786896908, 0.869832414469312, 0.903624028686292, 0.928009458165758, 0.89530074103221, 0.966091625043316, 0.89530074103221, 0.928009458165758, 0.91998599859972, 0.935915473145537, 0.935915473145537, 0.966091625043316, 0.951326392360875, 0.935915473145537, 0.935915473145537, 0.935915473145537, 0.935915473145537, 0.9588, 0.980008815222918, 0.973173467067702, 0.99840799916684, 1.00343509533409, 0.986547420981189, 1.00343509533409, 0.986547420981189, 0.99840799916684, 0.99840799916684, 0.99840799916684, 1.00343509533409, 1.00343509533409, 0.99840799916684, 0.992717209646699, 1.00343509533409, 0.986547420981189, 0.986547420981189, 1.00343509533409, 1.00950175376729, 0.99840799916684, 0.99840799916684, 1.00744, 1.00343509533409, 1.00950175376729, 1.00744, 1.00950175376729, 1.00343509533409, 1.00343509533409, 1.00343509533409, 1, 1.00343509533409, 1.00950175376729, 1.00744, 1, 1.00950175376729, 1, 1.00950175376729, 1.00950175376729, 1.00950175376729, 1, 1.00950175376729, 1, 1, 1.00950175376729, 1.00950175376729, 1.00744, 1, )
sim5 = data.frame(J=Jlist5, portion=portion_list, lower=lower_list, upper=upper_list)
# Stoped sim5 mid-simulation, here's the data
portion_list = c(0.75, 0.77, 0.84, 0.79, 0.83, 0.86, 0.82, 0.91, 0.82, 0.86, 0.85, 0.87, 0.87, 0.91, 0.89, 0.87, 0.87, 0.87, 0.87, 0.9, 0.93, 0.92, 0.96, 0.97, 0.94, 0.97, 0.94, 0.96, 0.96, 0.96, 0.97, 0.97, 0.96, 0.95, 0.97, 0.94, 0.94, 0.97, 0.99, 0.96, 0.96, 0.98, 0.97, 0.99, 0.98, 0.99, 0.97, 0.97, 0.97, 1, 0.97, 0.99, 0.98, 1, 0.99, 1, 0.99, 0.99, 0.99, 1, 0.99, 1, 1, 0.99, 0.99, 0.98, 1, )
Jlist5[1:length(portion_list)]
# Stoped sim5 mid-simulation, here's the data
portion_list = c(0.75, 0.77, 0.84, 0.79, 0.83, 0.86, 0.82, 0.91, 0.82, 0.86, 0.85, 0.87, 0.87, 0.91, 0.89, 0.87, 0.87, 0.87, 0.87, 0.9, 0.93, 0.92, 0.96, 0.97, 0.94, 0.97, 0.94, 0.96, 0.96, 0.96, 0.97, 0.97, 0.96, 0.95, 0.97, 0.94, 0.94, 0.97, 0.99, 0.96, 0.96, 0.98, 0.97, 0.99, 0.98, 0.99, 0.97, 0.97, 0.97, 1, 0.97, 0.99, 0.98, 1, 0.99, 1, 0.99, 0.99, 0.99, 1, 0.99, 1, 1, 0.99, 0.99, 0.98, 1)
lower_list = c(0.665129510429125, 0.687516828382997, 0.768145213103092, 0.710167585530688, 0.756375971313708, 0.791990541834242, 0.74469925896779, 0.853908374956684, 0.74469925896779, 0.791990541834242, 0.78001400140028, 0.804084526854463, 0.804084526854463, 0.853908374956684, 0.828673607639125, 0.804084526854463, 0.804084526854463, 0.804084526854463, 0.804084526854463, 0.8412, 0.879991184777082, 0.866826532932298, 0.92159200083316, 0.936564904665905, 0.893452579018811, 0.936564904665905, 0.893452579018811, 0.92159200083316, 0.92159200083316, 0.92159200083316, 0.936564904665905, 0.936564904665905, 0.92159200083316, 0.907282790353301, 0.936564904665905, 0.893452579018811, 0.893452579018811, 0.936564904665905, 0.97049824623271, 0.92159200083316, 0.92159200083316, 0.95256, 0.936564904665905, 0.97049824623271, 0.95256, 0.97049824623271, 0.936564904665905, 0.936564904665905, 0.936564904665905, 1, 0.936564904665905, 0.97049824623271, 0.95256, 1, 0.97049824623271, 1, 0.97049824623271, 0.97049824623271, 0.97049824623271, 1, 0.97049824623271, 1, 1, 0.97049824623271, 0.97049824623271, 0.95256, 1)
upper_list = c(0.834870489570875, 0.852483171617003, 0.911854786896908, 0.869832414469312, 0.903624028686292, 0.928009458165758, 0.89530074103221, 0.966091625043316, 0.89530074103221, 0.928009458165758, 0.91998599859972, 0.935915473145537, 0.935915473145537, 0.966091625043316, 0.951326392360875, 0.935915473145537, 0.935915473145537, 0.935915473145537, 0.935915473145537, 0.9588, 0.980008815222918, 0.973173467067702, 0.99840799916684, 1.00343509533409, 0.986547420981189, 1.00343509533409, 0.986547420981189, 0.99840799916684, 0.99840799916684, 0.99840799916684, 1.00343509533409, 1.00343509533409, 0.99840799916684, 0.992717209646699, 1.00343509533409, 0.986547420981189, 0.986547420981189, 1.00343509533409, 1.00950175376729, 0.99840799916684, 0.99840799916684, 1.00744, 1.00343509533409, 1.00950175376729, 1.00744, 1.00950175376729, 1.00343509533409, 1.00343509533409, 1.00343509533409, 1, 1.00343509533409, 1.00950175376729, 1.00744, 1, 1.00950175376729, 1, 1.00950175376729, 1.00950175376729, 1.00950175376729, 1, 1.00950175376729, 1, 1, 1.00950175376729, 1.00950175376729, 1.00744, 1)
sim5 = data.frame(J=Jlist5[1:length(portion_list)], portion=portion_list, lower=lower_list, upper=upper_list)
View(sim5)
plotsim(100, Jlist5, sim5, J_hat/0.1^2, take_up=0.1)
plotsim(100, Jlist5[1:length(portion_list)], sim5, J_hat/0.1^2, take_up=0.1)
plotsim(100, Jlist5[1:length(portion_list)], sim5, J_hat/0.1^2, take_up=0.1)
Jlist6 = seq(from=1000, to=15000, by=500)
sim6 = simulate(data1, Jlist6, Simulations=20, take_up=0.50)
plotsim(20, Jlist6, sim6, J_hat/0.5^2, take_up=0.5)
Jlist6 = seq(from=1000, to=7000, by=100)
sim6 = simulate(data1, Jlist6, Simulations=20, take_up=0.50)
plotsim(20, Jlist6, sim6, J_hat/0.5^2, take_up=0.5)
Jlist7 = seq(from=2000, to=6000, by=100)
sim7 = simulate(data1, Jlist7, Simulations=100, take_up=0.50)
plotsim(100, Jlist7, sim7, J_hat/0.5^2, take_up=0.5)
T
sigma2_vare = sum(FE1$residuals^2) / (summary(FE1)$df[2] - 1)
sigma2_e = sum(FE2$residuals^2) / (summary(FE2)$df[2] - 1)
sigma2_v = sigma2_vare - sigma2_e
rho = sigma2_v / (sigma2_v + sigma2_e)
sigma2_vare
sigma2_e
sigma2_v
rho
alpha = 0.05
kappa = 0.8
P = 0.5
MDE = 0.05*mean(data1$kwh)
T = length(unique(data1$yearmonthid))
t_a = qt(alpha/2, J, lower.tail=FALSE)
t_k = qt((1-kappa), J, lower.tail=FALSE)
J_hat = (t_a + t_k)^2*sigma2_vare/(P*(1-P)*MDE^2)*(rho + (1-rho)/T)
J_hat
## QUESTION 2: PANEL DATA ===================================
data2 = read.csv('pecanstreet_monthly.csv')
data3 = read.csv('pecanstreet_daily.csv')
View(data2)
